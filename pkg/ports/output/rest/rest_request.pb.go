// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: protobuf/rest_request.proto

package rest

import (
	_ "github.com/tecmise/connector-lib/pkg/ports/output/field"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindOne struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindOne) Reset() {
	*x = FindOne{}
	mi := &file_protobuf_rest_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindOne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOne) ProtoMessage() {}

func (x *FindOne) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_rest_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOne.ProtoReflect.Descriptor instead.
func (*FindOne) Descriptor() ([]byte, []int) {
	return file_protobuf_rest_request_proto_rawDescGZIP(), []int{0}
}

func (x *FindOne) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindOnes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindOnes) Reset() {
	*x = FindOnes{}
	mi := &file_protobuf_rest_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindOnes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOnes) ProtoMessage() {}

func (x *FindOnes) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_rest_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOnes.ProtoReflect.Descriptor instead.
func (*FindOnes) Descriptor() ([]byte, []int) {
	return file_protobuf_rest_request_proto_rawDescGZIP(), []int{1}
}

func (x *FindOnes) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type FindByName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByName) Reset() {
	*x = FindByName{}
	mi := &file_protobuf_rest_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByName) ProtoMessage() {}

func (x *FindByName) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_rest_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByName.ProtoReflect.Descriptor instead.
func (*FindByName) Descriptor() ([]byte, []int) {
	return file_protobuf_rest_request_proto_rawDescGZIP(), []int{2}
}

func (x *FindByName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FindByNames struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByNames) Reset() {
	*x = FindByNames{}
	mi := &file_protobuf_rest_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByNames) ProtoMessage() {}

func (x *FindByNames) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_rest_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByNames.ProtoReflect.Descriptor instead.
func (*FindByNames) Descriptor() ([]byte, []int) {
	return file_protobuf_rest_request_proto_rawDescGZIP(), []int{3}
}

func (x *FindByNames) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type FindByUUID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByUUID) Reset() {
	*x = FindByUUID{}
	mi := &file_protobuf_rest_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByUUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByUUID) ProtoMessage() {}

func (x *FindByUUID) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_rest_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByUUID.ProtoReflect.Descriptor instead.
func (*FindByUUID) Descriptor() ([]byte, []int) {
	return file_protobuf_rest_request_proto_rawDescGZIP(), []int{4}
}

func (x *FindByUUID) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type FindBetweenDates struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindBetweenDates) Reset() {
	*x = FindBetweenDates{}
	mi := &file_protobuf_rest_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindBetweenDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBetweenDates) ProtoMessage() {}

func (x *FindBetweenDates) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_rest_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBetweenDates.ProtoReflect.Descriptor instead.
func (*FindBetweenDates) Descriptor() ([]byte, []int) {
	return file_protobuf_rest_request_proto_rawDescGZIP(), []int{5}
}

func (x *FindBetweenDates) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *FindBetweenDates) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type FindAll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Filter        string                 `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Order         string                 `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAll) Reset() {
	*x = FindAll{}
	mi := &file_protobuf_rest_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAll) ProtoMessage() {}

func (x *FindAll) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_rest_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAll.ProtoReflect.Descriptor instead.
func (*FindAll) Descriptor() ([]byte, []int) {
	return file_protobuf_rest_request_proto_rawDescGZIP(), []int{6}
}

func (x *FindAll) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAll) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindAll) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *FindAll) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

var File_protobuf_rest_request_proto protoreflect.FileDescriptor

const file_protobuf_rest_request_proto_rawDesc = "" +
	"\n" +
	"\x1bprotobuf/rest_request.proto\x12\x10tecmise.requests\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/descriptor.proto\x1a\x1cprotobuf/field_options.proto\"C\n" +
	"\aFindOne\x128\n" +
	"\x02id\x18\x01 \x01(\x03B(\x9a\xb5\x18\brequired\xa2\xb5\x18\fID do objeto\xaa\xb5\x18\x02id\xb2\xb5\x18\x02idR\x02id\"A\n" +
	"\bFindOnes\x125\n" +
	"\x03ids\x18\x01 \x03(\x03B#\x9a\xb5\x18\brequired\xa2\xb5\x18\rIDs do objeto\xb2\xb5\x18\x02idR\x03ids\"P\n" +
	"\n" +
	"FindByName\x12B\n" +
	"\x04name\x18\x01 \x01(\tB.\x9a\xb5\x18\brequired\xa2\xb5\x18\x0eNome do objeto\xaa\xb5\x18\x04name\xb2\xb5\x18\x04nameR\x04name\"L\n" +
	"\vFindByNames\x12=\n" +
	"\x05names\x18\x01 \x03(\tB'\x9a\xb5\x18\brequired\xa2\xb5\x18\x0fNomes do objeto\xb2\xb5\x18\x04nameR\x05names\"U\n" +
	"\n" +
	"FindByUUID\x12G\n" +
	"\x04uuid\x18\x01 \x01(\tB3\x9a\xb5\x18\rrequired,uuid\xa2\xb5\x18\x0eUUID do objeto\xaa\xb5\x18\x04uuid\xb2\xb5\x18\x04uuidR\x04uuid\"\xaa\x02\n" +
	"\x10FindBetweenDates\x12\x8c\x01\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampBQ\x9a\xb5\x18\x11required,datetime\xa2\xb5\x18 Data inicial no formato ISO 8601\xaa\xb5\x18\bend_date\xb2\xb5\x18\bend_dateR\tstartDate\x12\x86\x01\n" +
	"\bend_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampBO\x9a\xb5\x18\x11required,datetime\xa2\xb5\x18\x1eData final no formato ISO 8601\xaa\xb5\x18\bend_date\xb2\xb5\x18\bend_dateR\aendDate\"\x96\x02\n" +
	"\aFindAll\x12@\n" +
	"\x04page\x18\x01 \x01(\x05B,\x9a\xb5\x18\x05min=1\xa2\xb5\x18\x1fNúmero da página (padrão: 1)R\x04page\x12L\n" +
	"\x05limit\x18\x02 \x01(\x05B6\x9a\xb5\x18\x05min=1\xa2\xb5\x18)Limite de itens por página (padrão: 10)R\x05limit\x12+\n" +
	"\x06filter\x18\x03 \x01(\tB\x13\xa2\xb5\x18\x0fFiltro de buscaR\x06filter\x12N\n" +
	"\x05order\x18\x04 \x01(\tB8\x9a\xb5\x18\x0eoneof=ASC DESC\xa2\xb5\x18\"Ordem dos resultados (ASC ou DESC)R\x05orderBa\n" +
	"'com.tecmise.connector.ports.output.restZ6github.com/tecmise/connector-lib/pkg/ports/output/restb\x06proto3"

var (
	file_protobuf_rest_request_proto_rawDescOnce sync.Once
	file_protobuf_rest_request_proto_rawDescData []byte
)

func file_protobuf_rest_request_proto_rawDescGZIP() []byte {
	file_protobuf_rest_request_proto_rawDescOnce.Do(func() {
		file_protobuf_rest_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_rest_request_proto_rawDesc), len(file_protobuf_rest_request_proto_rawDesc)))
	})
	return file_protobuf_rest_request_proto_rawDescData
}

var file_protobuf_rest_request_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_protobuf_rest_request_proto_goTypes = []any{
	(*FindOne)(nil),               // 0: tecmise.requests.FindOne
	(*FindOnes)(nil),              // 1: tecmise.requests.FindOnes
	(*FindByName)(nil),            // 2: tecmise.requests.FindByName
	(*FindByNames)(nil),           // 3: tecmise.requests.FindByNames
	(*FindByUUID)(nil),            // 4: tecmise.requests.FindByUUID
	(*FindBetweenDates)(nil),      // 5: tecmise.requests.FindBetweenDates
	(*FindAll)(nil),               // 6: tecmise.requests.FindAll
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_protobuf_rest_request_proto_depIdxs = []int32{
	7, // 0: tecmise.requests.FindBetweenDates.start_date:type_name -> google.protobuf.Timestamp
	7, // 1: tecmise.requests.FindBetweenDates.end_date:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protobuf_rest_request_proto_init() }
func file_protobuf_rest_request_proto_init() {
	if File_protobuf_rest_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_rest_request_proto_rawDesc), len(file_protobuf_rest_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_rest_request_proto_goTypes,
		DependencyIndexes: file_protobuf_rest_request_proto_depIdxs,
		MessageInfos:      file_protobuf_rest_request_proto_msgTypes,
	}.Build()
	File_protobuf_rest_request_proto = out.File
	file_protobuf_rest_request_proto_goTypes = nil
	file_protobuf_rest_request_proto_depIdxs = nil
}
